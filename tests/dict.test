# -*- tcl -*-

package require tcltest
package require json
package require yajltcl

namespace import ::tcltest::*

namespace eval ::yajl::test {

	proc dotest {raw} {
		#set count 10000
		set count 1
		
		# do the tcllib method
		set start [clock clicks]
		for {set i 0} {$i < $count} {incr i} {
			set expected [::json::json2dict $raw]
		}
		set end [clock clicks]
		if {$count > 1} {
			puts "tcllib took [expr {$end-$start}] clicks"
		}
		
		# do the yajl method.
		set start [clock clicks]
		for {set i 0} {$i < $count} {incr i} {
			set actual [::yajl::json2dict $raw]
		}
		set end [clock clicks]
		if {$count > 1} {
			puts "yajl took [expr {$end-$start}] clicks"
		}
		
		# compare the results.
		if {$actual != $expected} {
			puts "Expected: $expected"
			puts "Actual: $actual"
			puts "Input: $raw"
			puts "FAILED"
			return 0
		} else {
			return 1
		}
	}

	test 1.01 {: Simple list
	} -body {
		dotest {[123, 577, 3453]}
	} -result 1
	
	test 1.02 {: Simple array with a nested list
	} -body {
		dotest {{"moo": [123, 4576, 789], "cow": "moooo"}}
	} -result 1

	test 1.03 {: Mixed array with lists and nested arrays
	} -body {
		dotest {{"moo": [123, 4576, 789], "cow": "moooo", "complex": {"alfa" : "a", "bravo": "b", "charlie" : "c", "delta"  : "d" }}}
	} -result 1

	test 1.04 {: Array with null element
	} -body {
		dotest {{"moo": "cow", "pig": "oink", "rabbit" : null}}
	} -result 1

	test 1.05 {: example from the yajl-tcl README file.
	} -body {
		dotest {{
    "type": "FeatureCollection",
	"features": [
				 {
					 "type": "Feature",
					 "geometry": {
                                "type": "Point",
						 "coordinates": [
                                        -106.6091944,
										35.0401944
										]
					 },
					 "properties": {
						 "label": "KABQ"
					 }
				 },
				 {
                        "type": "Feature",
					 "geometry": {
                                "type": "Point",
						 "coordinates": [
                                        -118.3586667,
                                        34.206667
										]
					 },
					 "properties": {
                                "label": "KBUR"
					 }
				 }
				 ]
		}}
	} -result 1

	test 1.06 {: example from "man n json" (tcllib)
	} -body {
		dotest {[
		 {
              "precision": "zip",
              "Latitude":  37.7668,
              "Longitude": -122.3959,
              "Address":   "",
              "City":      "SAN FRANCISCO",
              "State":     "CA",
              "Zip":       "94107",
              "Country":   "US"
		 },
		 {
              "precision": "zip",
              "Latitude":  37.371991,
              "Longitude": -122.02602,
              "Address":   "",
              "City":      "SUNNYVALE",
              "State":     "CA",
              "Zip":       "94085",
              "Country":   "US"
		 }
		 ]
		}
	} -result 1

	test 1.07 {: example from "man n json" (tcllib)
	} -body {
		dotest {{
	"Image": {
               "Width":  800,
               "Height": 600,
               "Title":  "View from 15th Floor",
		"Thumbnail": {
                   "Url":    "http://www.example.com/image/481989943",
                   "Height": 125,
                   "Width":  "100"
		},
		"IDs": [116, 943, 234, 38793]
	}
		}}
	} -result 1


	test 1.08 {: boolean example from PR#39
	} -body {
		dotest {{
			"valueTrue":true,
			"valueFalse":false,
			"x":"true",
			"y":false,
			"a":{
				"b":1,
				"c":"true",
				"d":{
					"p":false
				}
			}
		}}
	} -result 1

}

cleanupTests
